Para utilizar JS dentro do HTML, utilize: <script></script> e coloque o script dentro dela, posicione as tags no final da pagina apos o body
pode-se imaginar tudo como pastas, para utilizar o dom, ele é um objeto, então voce vai acessando "pastas" dentro dele e chega no diretorio que desejar, podendo altera-lo utilizando innerHTML por exemplo...


DOM/MOD
Document Object Model/ Modelo de Objeto do Documento
o Dom analiza todo o html e css, um objeto js grande que tem tudo, tag, atributo, estilo de cada tag...
Para acessa-lo pelo java scrip:

document.body.innerHTML = "Webpage be gone!";

document e a variavel para acessar o DOM
body é a parte do html inteiro que queremos acessar
innerHTML é para mudar tudo dentro de body

para modificar id's:
var nomeidEl = document.getElementById("nomedoid");
nomeidEl.innerHTML = "oque modificar dentro do que esta sendo usada a id"

crie uma variavel, El significa element, não é necessario mas facilta para entender.getElementById irá dizer ao navegador para acessar o elemento para sua id,
coloque o nome dela, depois acesse utilizando innerHTML e altere da forma que quiser.

Existem varrios getElement, como por tag, nome...	

outra maneira de acessar elementos pelo DOM é utilizando querrySelector("#classeTal")

document.getElementById(id)
document.getElementsByClassName("className")
document.getElementsByTagName("tagName")
document.querySelector("cssSelector")
document.querySelectorAll("cssSelector")
cssSelector altera tudo que esta dentro de <style>
querry selector seleciona tudo que pode ser utilizado dentro do css, no caso classe, ou até id, tags...



console.log
o console.log é uma função que imprime no console o elemento desejado:
var x = 15;
console.log(x);

no console vai aparecer 15

Modificar style
para modificar styles dentro do js, apenas utilize .style após document
basicamente vai acessando como se fosse um diretorio ate chegar no ponto que deseja alterar

var headingEl = document.querySelector("#heading");
            headingEl.style.color = "orange";
            headingEl.style.backgroundColor = "black";
            headingEl.style.textAlign = "center";
            headingEl.innerHTML = "All about cats";


innerHTML e textContent
o innerHTML é utilizado quando é necessario ler o codigo como html
o textContent apenas altera o texto, se for excrito com codigos html dentro, ele vai reproduzir como texto
por exemplo:
headingEl.textContent = "All about <em>cars</em>";
o codigo vai ser excrito como: All about <em>cars</em>
mas no innerHTML vai aparecer: All about CARS

criando elementos
var catEL document.createElement("img");
catEl.src = "link da foto";
catEL.alt = "cria o alt, legenda para foto";

appendChild faz com que ela seja a ultima na hereditariedade, é como se ela fosse a ultima da lista, a mais nova
setAtribute serve para adicionar atributo em um elemento, por exemplo: 
imgEl.setAttribute("src", "http://www.dogs.com/dog.gif");
imgEl.removeAtribute("atributo desejado") remove o atributo, basicamente o contrario do setAttribute

modificando nomes de classes
para dar um nome a classe:
mainEl.className = "warning";

para adicionar mais um nome a classe
mainEl.className += " warning";

tambem pode ser utilizado o classList.add
mainEl.classList.add("warning");


Criando elementos
Para criar um elemento utilize:
var imgEl = document.createElement("img");

para acrescentar um elemento a outro, utiliza appendChild. Tambem existem  insertBefore, replaceChild, removeChild, e insertAdjacentHTML...
document.body.appendChild(imgEl);



Botões:
<button id="sla">o que vai estar escrito dentro do botão</button>



														REVISAR EVENTOS DOM INTEIRO
  // Step 1: Find the element we want the event on
 var catPic = document.getElementById("cat-pic");
  // Step 2: Define the event listener function
 var onCatClick = function(e) {
                var stashePic = document.getElementById("mustache-pic");  
                stashePic.style.top = e.clientY + "px";
                stashePic.style.left = e.clientX + "px";
            };
  // Step 3: Attach event listener to element
catPic.addEventListener("click", onCatClick);



Objeto window
window e um objeto que contem varias informações sobre a pagina
tambem pode ser pensado como um diretorio, por ser um objeto
voce pode utilizar para acessar o url
p.textContent += "The URL of this page is " + window.location.href;


setInterval
o set interval define algo a ser repitido durante um tempo determinado:
window.setInterval(countItDown, 1000);
isso executa countItDown uma vez a cada 1000 milisegundos, isso sendo 1x por segundo
var currentTime = parseFloat(countdown.textContent);
o valor de countdown é 5
parseFloat faz com que o texto 5 se torne o valor
por exemplo: countdown + countdown = 55
parseFloat(countdown.textcontent) + parseFloat(countdown.textContent) = 10
Se quiser fazer uma taxa de FPS, apenas utilize o valor 1000/30, que seria 30 fps

para parar o setInterval, apenas aplique outro elemento que cancele essa ordem. coloque dentro de uma variavel, e cancele-á:
window.clearInterval(timer);  //sendo timer o nome da variavel.

														REVISAR requestAnimationFrame


Criando animações com css
@keyframes crescer{
	from{
	width: 50px;
	]

	to{
	width: 300px;
	}

}

#imagem{
	animation-name: crescer;
	animation-duration: 3s;
	
}

#contagem:hover {
	font-size:150px;
	transition: font-size 1s linear;
}

@keyframes cria uma animação chamada crescer que aumenta de 50 para 300 px
animation name utiliza crescer, e dura 3 segundos
contagem:hover significa que quando passar o mouse por cima de contagem, 










































