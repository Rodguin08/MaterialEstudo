{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LevelCapLogger = exports.LevelTransformLogger = void 0;\n\nconst logger_1 = require(\"./logger\");\n\nclass LevelTransformLogger extends logger_1.Logger {\n  constructor(name, parent = null, levelTransform) {\n    super(name, parent);\n    this.name = name;\n    this.parent = parent;\n    this.levelTransform = levelTransform;\n  }\n\n  log(level, message, metadata = {}) {\n    return super.log(this.levelTransform(level), message, metadata);\n  }\n\n  createChild(name) {\n    return new LevelTransformLogger(name, this, this.levelTransform);\n  }\n\n}\n\nexports.LevelTransformLogger = LevelTransformLogger;\n\nclass LevelCapLogger extends LevelTransformLogger {\n  constructor(name, parent = null, levelCap) {\n    super(name, parent, level => {\n      return LevelCapLogger.levelMap[levelCap][level] || level;\n    });\n    this.name = name;\n    this.parent = parent;\n    this.levelCap = levelCap;\n  }\n\n}\n\nexports.LevelCapLogger = LevelCapLogger;\nLevelCapLogger.levelMap = {\n  debug: {\n    debug: 'debug',\n    info: 'debug',\n    warn: 'debug',\n    error: 'debug',\n    fatal: 'debug'\n  },\n  info: {\n    debug: 'debug',\n    info: 'info',\n    warn: 'info',\n    error: 'info',\n    fatal: 'info'\n  },\n  warn: {\n    debug: 'debug',\n    info: 'info',\n    warn: 'warn',\n    error: 'warn',\n    fatal: 'warn'\n  },\n  error: {\n    debug: 'debug',\n    info: 'info',\n    warn: 'warn',\n    error: 'error',\n    fatal: 'error'\n  },\n  fatal: {\n    debug: 'debug',\n    info: 'info',\n    warn: 'warn',\n    error: 'error',\n    fatal: 'fatal'\n  }\n};","map":null,"metadata":{},"sourceType":"script"}