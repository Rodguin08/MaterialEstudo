{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PatternMatchingHost = void 0;\n\nconst resolver_1 = require(\"./resolver\");\n/**\n */\n\n\nclass PatternMatchingHost extends resolver_1.ResolverHost {\n  constructor() {\n    super(...arguments);\n    this._patterns = new Map();\n  }\n\n  addPattern(pattern, replacementFn) {\n    // Simple GLOB pattern replacement.\n    const reString = '^(' + (Array.isArray(pattern) ? pattern : [pattern]).map(ex => '(' + ex.split(/[/\\\\]/g).map(f => f.replace(/[-[\\]{}()+?.^$|]/g, '\\\\$&').replace(/^\\*\\*/g, '(.+?)?').replace(/\\*/g, '[^/\\\\\\\\]*')).join('[/\\\\\\\\]') + ')').join('|') + ')($|/|\\\\\\\\)';\n\n    this._patterns.set(new RegExp(reString), replacementFn);\n  }\n\n  _resolve(path) {\n    let newPath = path;\n\n    this._patterns.forEach((fn, re) => {\n      if (re.test(path)) {\n        newPath = fn(newPath);\n      }\n    });\n\n    return newPath;\n  }\n\n}\n\nexports.PatternMatchingHost = PatternMatchingHost;","map":null,"metadata":{},"sourceType":"script"}