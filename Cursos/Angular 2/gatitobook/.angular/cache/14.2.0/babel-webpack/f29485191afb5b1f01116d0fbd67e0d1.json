{"ast":null,"code":"'use strict';\n\nconst path = require('path');\n\nconst log = require('npmlog');\n\nfunction findNodeDirectory(scriptLocation, processObj) {\n  // set dirname and process if not passed in\n  // this facilitates regression tests\n  if (scriptLocation === undefined) {\n    scriptLocation = __dirname;\n  }\n\n  if (processObj === undefined) {\n    processObj = process;\n  } // Have a look to see what is above us, to try and work out where we are\n\n\n  var npmParentDirectory = path.join(scriptLocation, '../../../..');\n  log.verbose('node-gyp root', 'npm_parent_directory is ' + path.basename(npmParentDirectory));\n  var nodeRootDir = '';\n  log.verbose('node-gyp root', 'Finding node root directory');\n\n  if (path.basename(npmParentDirectory) === 'deps') {\n    // We are in a build directory where this script lives in\n    // deps/npm/node_modules/node-gyp/lib\n    nodeRootDir = path.join(npmParentDirectory, '..');\n    log.verbose('node-gyp root', 'in build directory, root = ' + nodeRootDir);\n  } else if (path.basename(npmParentDirectory) === 'node_modules') {\n    // We are in a node install directory where this script lives in\n    // lib/node_modules/npm/node_modules/node-gyp/lib or\n    // node_modules/npm/node_modules/node-gyp/lib depending on the\n    // platform\n    if (processObj.platform === 'win32') {\n      nodeRootDir = path.join(npmParentDirectory, '..');\n    } else {\n      nodeRootDir = path.join(npmParentDirectory, '../..');\n    }\n\n    log.verbose('node-gyp root', 'in install directory, root = ' + nodeRootDir);\n  } else {\n    // We don't know where we are, try working it out from the location\n    // of the node binary\n    var nodeDir = path.dirname(processObj.execPath);\n    var directoryUp = path.basename(nodeDir);\n\n    if (directoryUp === 'bin') {\n      nodeRootDir = path.join(nodeDir, '..');\n    } else if (directoryUp === 'Release' || directoryUp === 'Debug') {\n      // If we are a recently built node, and the directory structure\n      // is that of a repository. If we are on Windows then we only need\n      // to go one level up, everything else, two\n      if (processObj.platform === 'win32') {\n        nodeRootDir = path.join(nodeDir, '..');\n      } else {\n        nodeRootDir = path.join(nodeDir, '../..');\n      }\n    } // Else return the default blank, \"\".\n\n  }\n\n  return nodeRootDir;\n}\n\nmodule.exports = findNodeDirectory;","map":null,"metadata":{},"sourceType":"script"}