{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"C:/Users/Voluti/Desktop/Git/Cursos/Angular 2/gatitobook/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createWorkspaceHost = void 0;\n\nconst virtual_fs_1 = require(\"../virtual-fs\");\n\nfunction createWorkspaceHost(host) {\n  const workspaceHost = {\n    readFile(path) {\n      return _asyncToGenerator(function* () {\n        const data = yield host.read((0, virtual_fs_1.normalize)(path)).toPromise();\n        return virtual_fs_1.virtualFs.fileBufferToString(data);\n      })();\n    },\n\n    writeFile(path, data) {\n      return _asyncToGenerator(function* () {\n        return host.write((0, virtual_fs_1.normalize)(path), virtual_fs_1.virtualFs.stringToFileBuffer(data)).toPromise();\n      })();\n    },\n\n    isDirectory(path) {\n      return _asyncToGenerator(function* () {\n        try {\n          return yield host.isDirectory((0, virtual_fs_1.normalize)(path)).toPromise();\n        } catch {\n          // some hosts throw if path does not exist\n          return false;\n        }\n      })();\n    },\n\n    isFile(path) {\n      return _asyncToGenerator(function* () {\n        try {\n          return yield host.isFile((0, virtual_fs_1.normalize)(path)).toPromise();\n        } catch {\n          // some hosts throw if path does not exist\n          return false;\n        }\n      })();\n    }\n\n  };\n  return workspaceHost;\n}\n\nexports.createWorkspaceHost = createWorkspaceHost;","map":null,"metadata":{},"sourceType":"script"}