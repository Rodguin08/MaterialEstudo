{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = /*#__PURE__*/require(\"C:/Users/Voluti/Desktop/Git/Cursos/Angular 2/gatitobook/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\n/*#__PURE__*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NewCommandModule = void 0;\n\nconst command_module_1 = /*#__PURE__*/require(\"../../command-builder/command-module\");\n\nconst schematics_command_module_1 = /*#__PURE__*/require(\"../../command-builder/schematics-command-module\");\n\nconst version_1 = /*#__PURE__*/require(\"../../utilities/version\");\n\nclass NewCommandModule extends schematics_command_module_1.SchematicsCommandModule {\n  constructor() {\n    super(...arguments);\n    this.schematicName = 'ng-new';\n    this.scope = command_module_1.CommandScope.Out;\n    this.allowPrivateSchematics = true;\n    this.command = 'new [name]';\n    this.aliases = 'n';\n    this.describe = 'Creates a new Angular workspace.';\n  }\n\n  builder(argv) {\n    var _superprop_getBuilder = () => super.builder,\n        _this = this;\n\n    return _asyncToGenerator(function* () {\n      const localYargs = (yield _superprop_getBuilder().call(_this, argv)).option('collection', {\n        alias: 'c',\n        describe: 'A collection of schematics to use in generating the initial application.',\n        type: 'string'\n      });\n      const {\n        options: {\n          collection: collectionNameFromArgs\n        }\n      } = _this.context.args;\n      const collectionName = typeof collectionNameFromArgs === 'string' ? collectionNameFromArgs : yield _this.getCollectionFromConfig();\n      const workflow = yield _this.getOrCreateWorkflowForBuilder(collectionName);\n      const collection = workflow.engine.createCollection(collectionName);\n      const options = yield _this.getSchematicOptions(collection, _this.schematicName, workflow);\n      return _this.addSchemaOptionsToCommand(localYargs, options);\n    })();\n  }\n\n  run(options) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a; // Register the version of the CLI in the registry.\n\n\n      const collectionName = (_a = options.collection) !== null && _a !== void 0 ? _a : yield _this2.getCollectionFromConfig();\n      const {\n        dryRun,\n        force,\n        interactive,\n        defaults,\n        collection,\n        ...schematicOptions\n      } = options;\n      const workflow = yield _this2.getOrCreateWorkflowForExecution(collectionName, {\n        dryRun,\n        force,\n        interactive,\n        defaults\n      });\n      workflow.registry.addSmartDefaultProvider('ng-cli-version', () => version_1.VERSION.full); // Compatibility check for NPM 7\n\n      if (collectionName === '@schematics/angular' && !schematicOptions.skipInstall && (schematicOptions.packageManager === undefined || schematicOptions.packageManager === 'npm')) {\n        _this2.context.packageManager.ensureCompatibility();\n      }\n\n      return _this2.runSchematic({\n        collectionName,\n        schematicName: _this2.schematicName,\n        schematicOptions,\n        executionOptions: {\n          dryRun,\n          force,\n          interactive,\n          defaults\n        }\n      });\n    })();\n  }\n  /** Find a collection from config that has an `ng-new` schematic. */\n\n\n  getCollectionFromConfig() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      for (const collectionName of yield _this3.getSchematicCollections()) {\n        const workflow = _this3.getOrCreateWorkflowForBuilder(collectionName);\n\n        const collection = workflow.engine.createCollection(collectionName);\n        const schematicsInCollection = collection.description.schematics;\n\n        if (Object.keys(schematicsInCollection).includes(_this3.schematicName)) {\n          return collectionName;\n        }\n      }\n\n      return schematics_command_module_1.DEFAULT_SCHEMATICS_COLLECTION;\n    })();\n  }\n\n}\n\nexports.NewCommandModule = NewCommandModule;","map":null,"metadata":{},"sourceType":"script"}