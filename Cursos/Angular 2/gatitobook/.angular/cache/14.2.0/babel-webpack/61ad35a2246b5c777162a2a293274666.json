{"ast":null,"code":"const runningProcs = new Set();\nlet handlersInstalled = false;\nconst forwardedSignals = ['SIGINT', 'SIGTERM'];\n\nconst handleSignal = signal => {\n  for (const proc of runningProcs) {\n    proc.kill(signal);\n  }\n};\n\nconst setupListeners = () => {\n  for (const signal of forwardedSignals) {\n    process.on(signal, handleSignal);\n  }\n\n  handlersInstalled = true;\n};\n\nconst cleanupListeners = () => {\n  if (runningProcs.size === 0) {\n    for (const signal of forwardedSignals) {\n      process.removeListener(signal, handleSignal);\n    }\n\n    handlersInstalled = false;\n  }\n};\n\nconst add = proc => {\n  runningProcs.add(proc);\n\n  if (!handlersInstalled) {\n    setupListeners();\n  }\n\n  proc.once('exit', () => {\n    runningProcs.delete(proc);\n    cleanupListeners();\n  });\n};\n\nmodule.exports = {\n  add,\n  handleSignal,\n  forwardedSignals\n};","map":null,"metadata":{},"sourceType":"script"}