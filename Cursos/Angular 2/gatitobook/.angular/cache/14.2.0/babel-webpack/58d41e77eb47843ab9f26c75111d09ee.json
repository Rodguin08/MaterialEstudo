{"ast":null,"code":"var isValidSemver = require('semver/functions/valid');\n\nvar cleanSemver = require('semver/functions/clean');\n\nvar validateLicense = require('validate-npm-package-license');\n\nvar hostedGitInfo = require('hosted-git-info');\n\nvar isBuiltinModule = require('is-core-module');\n\nvar depTypes = ['dependencies', 'devDependencies', 'optionalDependencies'];\n\nvar extractDescription = require('./extract_description');\n\nvar url = require('url');\n\nvar typos = require('./typos.json');\n\nvar isEmail = str => str.includes('@') && str.indexOf('@') < str.lastIndexOf('.');\n\nmodule.exports = {\n  // default warning function\n  warn: function () {},\n  fixRepositoryField: function (data) {\n    if (data.repositories) {\n      this.warn('repositories');\n      data.repository = data.repositories[0];\n    }\n\n    if (!data.repository) {\n      return this.warn('missingRepository');\n    }\n\n    if (typeof data.repository === 'string') {\n      data.repository = {\n        type: 'git',\n        url: data.repository\n      };\n    }\n\n    var r = data.repository.url || '';\n\n    if (r) {\n      var hosted = hostedGitInfo.fromUrl(r);\n\n      if (hosted) {\n        r = data.repository.url = hosted.getDefaultRepresentation() === 'shortcut' ? hosted.https() : hosted.toString();\n      }\n    }\n\n    if (r.match(/github.com\\/[^/]+\\/[^/]+\\.git\\.git$/)) {\n      this.warn('brokenGitUrl', r);\n    }\n  },\n  fixTypos: function (data) {\n    Object.keys(typos.topLevel).forEach(function (d) {\n      if (Object.prototype.hasOwnProperty.call(data, d)) {\n        this.warn('typo', d, typos.topLevel[d]);\n      }\n    }, this);\n  },\n  fixScriptsField: function (data) {\n    if (!data.scripts) {\n      return;\n    }\n\n    if (typeof data.scripts !== 'object') {\n      this.warn('nonObjectScripts');\n      delete data.scripts;\n      return;\n    }\n\n    Object.keys(data.scripts).forEach(function (k) {\n      if (typeof data.scripts[k] !== 'string') {\n        this.warn('nonStringScript');\n        delete data.scripts[k];\n      } else if (typos.script[k] && !data.scripts[typos.script[k]]) {\n        this.warn('typo', k, typos.script[k], 'scripts');\n      }\n    }, this);\n  },\n  fixFilesField: function (data) {\n    var files = data.files;\n\n    if (files && !Array.isArray(files)) {\n      this.warn('nonArrayFiles');\n      delete data.files;\n    } else if (data.files) {\n      data.files = data.files.filter(function (file) {\n        if (!file || typeof file !== 'string') {\n          this.warn('invalidFilename', file);\n          return false;\n        } else {\n          return true;\n        }\n      }, this);\n    }\n  },\n  fixBinField: function (data) {\n    if (!data.bin) {\n      return;\n    }\n\n    if (typeof data.bin === 'string') {\n      var b = {};\n      var match;\n\n      if (match = data.name.match(/^@[^/]+[/](.*)$/)) {\n        b[match[1]] = data.bin;\n      } else {\n        b[data.name] = data.bin;\n      }\n\n      data.bin = b;\n    }\n  },\n  fixManField: function (data) {\n    if (!data.man) {\n      return;\n    }\n\n    if (typeof data.man === 'string') {\n      data.man = [data.man];\n    }\n  },\n  fixBundleDependenciesField: function (data) {\n    var bdd = 'bundledDependencies';\n    var bd = 'bundleDependencies';\n\n    if (data[bdd] && !data[bd]) {\n      data[bd] = data[bdd];\n      delete data[bdd];\n    }\n\n    if (data[bd] && !Array.isArray(data[bd])) {\n      this.warn('nonArrayBundleDependencies');\n      delete data[bd];\n    } else if (data[bd]) {\n      data[bd] = data[bd].filter(function (filtered) {\n        if (!filtered || typeof filtered !== 'string') {\n          this.warn('nonStringBundleDependency', filtered);\n          return false;\n        } else {\n          if (!data.dependencies) {\n            data.dependencies = {};\n          }\n\n          if (!Object.prototype.hasOwnProperty.call(data.dependencies, filtered)) {\n            this.warn('nonDependencyBundleDependency', filtered);\n            data.dependencies[filtered] = '*';\n          }\n\n          return true;\n        }\n      }, this);\n    }\n  },\n  fixDependencies: function (data, strict) {\n    objectifyDeps(data, this.warn);\n    addOptionalDepsToDeps(data, this.warn);\n    this.fixBundleDependenciesField(data);\n    ['dependencies', 'devDependencies'].forEach(function (deps) {\n      if (!(deps in data)) {\n        return;\n      }\n\n      if (!data[deps] || typeof data[deps] !== 'object') {\n        this.warn('nonObjectDependencies', deps);\n        delete data[deps];\n        return;\n      }\n\n      Object.keys(data[deps]).forEach(function (d) {\n        var r = data[deps][d];\n\n        if (typeof r !== 'string') {\n          this.warn('nonStringDependency', d, JSON.stringify(r));\n          delete data[deps][d];\n        }\n\n        var hosted = hostedGitInfo.fromUrl(data[deps][d]);\n\n        if (hosted) {\n          data[deps][d] = hosted.toString();\n        }\n      }, this);\n    }, this);\n  },\n  fixModulesField: function (data) {\n    if (data.modules) {\n      this.warn('deprecatedModules');\n      delete data.modules;\n    }\n  },\n  fixKeywordsField: function (data) {\n    if (typeof data.keywords === 'string') {\n      data.keywords = data.keywords.split(/,\\s+/);\n    }\n\n    if (data.keywords && !Array.isArray(data.keywords)) {\n      delete data.keywords;\n      this.warn('nonArrayKeywords');\n    } else if (data.keywords) {\n      data.keywords = data.keywords.filter(function (kw) {\n        if (typeof kw !== 'string' || !kw) {\n          this.warn('nonStringKeyword');\n          return false;\n        } else {\n          return true;\n        }\n      }, this);\n    }\n  },\n  fixVersionField: function (data, strict) {\n    // allow \"loose\" semver 1.0 versions in non-strict mode\n    // enforce strict semver 2.0 compliance in strict mode\n    var loose = !strict;\n\n    if (!data.version) {\n      data.version = '';\n      return true;\n    }\n\n    if (!isValidSemver(data.version, loose)) {\n      throw new Error('Invalid version: \"' + data.version + '\"');\n    }\n\n    data.version = cleanSemver(data.version, loose);\n    return true;\n  },\n  fixPeople: function (data) {\n    modifyPeople(data, unParsePerson);\n    modifyPeople(data, parsePerson);\n  },\n  fixNameField: function (data, options) {\n    if (typeof options === 'boolean') {\n      options = {\n        strict: options\n      };\n    } else if (typeof options === 'undefined') {\n      options = {};\n    }\n\n    var strict = options.strict;\n\n    if (!data.name && !strict) {\n      data.name = '';\n      return;\n    }\n\n    if (typeof data.name !== 'string') {\n      throw new Error('name field must be a string.');\n    }\n\n    if (!strict) {\n      data.name = data.name.trim();\n    }\n\n    ensureValidName(data.name, strict, options.allowLegacyCase);\n\n    if (isBuiltinModule(data.name)) {\n      this.warn('conflictingName', data.name);\n    }\n  },\n  fixDescriptionField: function (data) {\n    if (data.description && typeof data.description !== 'string') {\n      this.warn('nonStringDescription');\n      delete data.description;\n    }\n\n    if (data.readme && !data.description) {\n      data.description = extractDescription(data.readme);\n    }\n\n    if (data.description === undefined) {\n      delete data.description;\n    }\n\n    if (!data.description) {\n      this.warn('missingDescription');\n    }\n  },\n  fixReadmeField: function (data) {\n    if (!data.readme) {\n      this.warn('missingReadme');\n      data.readme = 'ERROR: No README data found!';\n    }\n  },\n  fixBugsField: function (data) {\n    if (!data.bugs && data.repository && data.repository.url) {\n      var hosted = hostedGitInfo.fromUrl(data.repository.url);\n\n      if (hosted && hosted.bugs()) {\n        data.bugs = {\n          url: hosted.bugs()\n        };\n      }\n    } else if (data.bugs) {\n      if (typeof data.bugs === 'string') {\n        if (isEmail(data.bugs)) {\n          data.bugs = {\n            email: data.bugs\n          };\n          /* eslint-disable-next-line node/no-deprecated-api */\n        } else if (url.parse(data.bugs).protocol) {\n          data.bugs = {\n            url: data.bugs\n          };\n        } else {\n          this.warn('nonEmailUrlBugsString');\n        }\n      } else {\n        bugsTypos(data.bugs, this.warn);\n        var oldBugs = data.bugs;\n        data.bugs = {};\n\n        if (oldBugs.url) {\n          /* eslint-disable-next-line node/no-deprecated-api */\n          if (typeof oldBugs.url === 'string' && url.parse(oldBugs.url).protocol) {\n            data.bugs.url = oldBugs.url;\n          } else {\n            this.warn('nonUrlBugsUrlField');\n          }\n        }\n\n        if (oldBugs.email) {\n          if (typeof oldBugs.email === 'string' && isEmail(oldBugs.email)) {\n            data.bugs.email = oldBugs.email;\n          } else {\n            this.warn('nonEmailBugsEmailField');\n          }\n        }\n      }\n\n      if (!data.bugs.email && !data.bugs.url) {\n        delete data.bugs;\n        this.warn('emptyNormalizedBugs');\n      }\n    }\n  },\n  fixHomepageField: function (data) {\n    if (!data.homepage && data.repository && data.repository.url) {\n      var hosted = hostedGitInfo.fromUrl(data.repository.url);\n\n      if (hosted && hosted.docs()) {\n        data.homepage = hosted.docs();\n      }\n    }\n\n    if (!data.homepage) {\n      return;\n    }\n\n    if (typeof data.homepage !== 'string') {\n      this.warn('nonUrlHomepage');\n      return delete data.homepage;\n    }\n    /* eslint-disable-next-line node/no-deprecated-api */\n\n\n    if (!url.parse(data.homepage).protocol) {\n      data.homepage = 'http://' + data.homepage;\n    }\n  },\n  fixLicenseField: function (data) {\n    const license = data.license || data.licence;\n\n    if (!license) {\n      return this.warn('missingLicense');\n    }\n\n    if (typeof license !== 'string' || license.length < 1 || license.trim() === '') {\n      return this.warn('invalidLicense');\n    }\n\n    if (!validateLicense(license).validForNewPackages) {\n      return this.warn('invalidLicense');\n    }\n  }\n};\n\nfunction isValidScopedPackageName(spec) {\n  if (spec.charAt(0) !== '@') {\n    return false;\n  }\n\n  var rest = spec.slice(1).split('/');\n\n  if (rest.length !== 2) {\n    return false;\n  }\n\n  return rest[0] && rest[1] && rest[0] === encodeURIComponent(rest[0]) && rest[1] === encodeURIComponent(rest[1]);\n}\n\nfunction isCorrectlyEncodedName(spec) {\n  return !spec.match(/[/@\\s+%:]/) && spec === encodeURIComponent(spec);\n}\n\nfunction ensureValidName(name, strict, allowLegacyCase) {\n  if (name.charAt(0) === '.' || !(isValidScopedPackageName(name) || isCorrectlyEncodedName(name)) || strict && !allowLegacyCase && name !== name.toLowerCase() || name.toLowerCase() === 'node_modules' || name.toLowerCase() === 'favicon.ico') {\n    throw new Error('Invalid name: ' + JSON.stringify(name));\n  }\n}\n\nfunction modifyPeople(data, fn) {\n  if (data.author) {\n    data.author = fn(data.author);\n  }\n\n  ['maintainers', 'contributors'].forEach(function (set) {\n    if (!Array.isArray(data[set])) {\n      return;\n    }\n\n    data[set] = data[set].map(fn);\n  });\n  return data;\n}\n\nfunction unParsePerson(person) {\n  if (typeof person === 'string') {\n    return person;\n  }\n\n  var name = person.name || '';\n  var u = person.url || person.web;\n  var wrappedUrl = u ? ' (' + u + ')' : '';\n  var e = person.email || person.mail;\n  var wrappedEmail = e ? ' <' + e + '>' : '';\n  return name + wrappedEmail + wrappedUrl;\n}\n\nfunction parsePerson(person) {\n  if (typeof person !== 'string') {\n    return person;\n  }\n\n  var matchedName = person.match(/^([^(<]+)/);\n  var matchedUrl = person.match(/\\(([^()]+)\\)/);\n  var matchedEmail = person.match(/<([^<>]+)>/);\n  var obj = {};\n\n  if (matchedName && matchedName[0].trim()) {\n    obj.name = matchedName[0].trim();\n  }\n\n  if (matchedEmail) {\n    obj.email = matchedEmail[1];\n  }\n\n  if (matchedUrl) {\n    obj.url = matchedUrl[1];\n  }\n\n  return obj;\n}\n\nfunction addOptionalDepsToDeps(data, warn) {\n  var o = data.optionalDependencies;\n\n  if (!o) {\n    return;\n  }\n\n  var d = data.dependencies || {};\n  Object.keys(o).forEach(function (k) {\n    d[k] = o[k];\n  });\n  data.dependencies = d;\n}\n\nfunction depObjectify(deps, type, warn) {\n  if (!deps) {\n    return {};\n  }\n\n  if (typeof deps === 'string') {\n    deps = deps.trim().split(/[\\n\\r\\s\\t ,]+/);\n  }\n\n  if (!Array.isArray(deps)) {\n    return deps;\n  }\n\n  warn('deprecatedArrayDependencies', type);\n  var o = {};\n  deps.filter(function (d) {\n    return typeof d === 'string';\n  }).forEach(function (d) {\n    d = d.trim().split(/(:?[@\\s><=])/);\n    var dn = d.shift();\n    var dv = d.join('');\n    dv = dv.trim();\n    dv = dv.replace(/^@/, '');\n    o[dn] = dv;\n  });\n  return o;\n}\n\nfunction objectifyDeps(data, warn) {\n  depTypes.forEach(function (type) {\n    if (!data[type]) {\n      return;\n    }\n\n    data[type] = depObjectify(data[type], type, warn);\n  });\n}\n\nfunction bugsTypos(bugs, warn) {\n  if (!bugs) {\n    return;\n  }\n\n  Object.keys(bugs).forEach(function (k) {\n    if (typos.bugs[k]) {\n      warn('typo', k, typos.bugs[k], 'bugs');\n      bugs[typos.bugs[k]] = bugs[k];\n      delete bugs[k];\n    }\n  });\n}","map":null,"metadata":{},"sourceType":"script"}