{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\n/*#__PURE__*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.colors = exports.removeColor = void 0;\n\nconst ansiColors = __importStar( /*#__PURE__*/require(\"ansi-colors\"));\n\nconst tty_1 = /*#__PURE__*/require(\"tty\");\n\nfunction supportColor() {\n  if (process.env.FORCE_COLOR !== undefined) {\n    // 2 colors: FORCE_COLOR = 0 (Disables colors), depth 1\n    // 16 colors: FORCE_COLOR = 1, depth 4\n    // 256 colors: FORCE_COLOR = 2, depth 8\n    // 16,777,216 colors: FORCE_COLOR = 3, depth 16\n    // See: https://nodejs.org/dist/latest-v12.x/docs/api/tty.html#tty_writestream_getcolordepth_env\n    // and https://github.com/nodejs/node/blob/b9f36062d7b5c5039498e98d2f2c180dca2a7065/lib/internal/tty.js#L106;\n    switch (process.env.FORCE_COLOR) {\n      case '':\n      case 'true':\n      case '1':\n      case '2':\n      case '3':\n        return true;\n\n      default:\n        return false;\n    }\n  }\n\n  if (process.stdout instanceof tty_1.WriteStream) {\n    return process.stdout.getColorDepth() > 1;\n  }\n\n  return false;\n}\n\nfunction removeColor(text) {\n  // This has been created because when colors.enabled is false unstyle doesn't work\n  // see: https://github.com/doowb/ansi-colors/blob/a4794363369d7b4d1872d248fc43a12761640d8e/index.js#L38\n  return text.replace(ansiColors.ansiRegex, '');\n}\n\nexports.removeColor = removeColor; // Create a separate instance to prevent unintended global changes to the color configuration\n\nconst colors = /*#__PURE__*/ansiColors.create();\nexports.colors = colors;\ncolors.enabled = /*#__PURE__*/supportColor();","map":null,"metadata":{},"sourceType":"script"}