{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = /*#__PURE__*/require(\"C:/Users/Voluti/Desktop/Git/Cursos/Angular 2/gatitobook/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\n/*#__PURE__*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DocCommandModule = void 0;\n\nconst open_1 = __importDefault( /*#__PURE__*/require(\"open\"));\n\nconst command_module_1 = /*#__PURE__*/require(\"../../command-builder/command-module\");\n\nclass DocCommandModule extends command_module_1.CommandModule {\n  constructor() {\n    super(...arguments);\n    this.command = 'doc <keyword>';\n    this.aliases = ['d'];\n    this.describe = 'Opens the official Angular documentation (angular.io) in a browser, and searches for a given keyword.';\n  }\n\n  builder(localYargs) {\n    return localYargs.positional('keyword', {\n      description: 'The keyword to search for, as provided in the search bar in angular.io.',\n      type: 'string',\n      demandOption: true\n    }).option('search', {\n      description: `Search all of angular.io. Otherwise, searches only API reference documentation.`,\n      alias: ['s'],\n      type: 'boolean',\n      default: false\n    }).option('version', {\n      description: 'Contains the version of Angular to use for the documentation. ' + 'If not provided, the command uses your current Angular core version.',\n      type: 'string'\n    }).strict();\n  }\n\n  run(options) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let domain = 'angular.io';\n\n      if (options.version) {\n        // version can either be a string containing \"next\"\n        if (options.version === 'next') {\n          domain = 'next.angular.io';\n        } else if (options.version === 'rc') {\n          domain = 'rc.angular.io'; // or a number where version must be a valid Angular version (i.e. not 0, 1 or 3)\n        } else if (!isNaN(+options.version) && ![0, 1, 3].includes(+options.version)) {\n          domain = `v${options.version}.angular.io`;\n        } else {\n          _this.context.logger.error('Version should either be a number (2, 4, 5, 6...), \"rc\" or \"next\"');\n\n          return 1;\n        }\n      } else {\n        // we try to get the current Angular version of the project\n        // and use it if we can find it\n        try {\n          /* eslint-disable-next-line import/no-extraneous-dependencies */\n          const currentNgVersion = (yield Promise.resolve().then(() => __importStar(require('@angular/core')))).VERSION.major;\n          domain = `v${currentNgVersion}.angular.io`;\n        } catch {}\n      }\n\n      yield (0, open_1.default)(options.search ? `https://${domain}/docs?search=${options.keyword}` : `https://${domain}/api?query=${options.keyword}`);\n    })();\n  }\n\n}\n\nexports.DocCommandModule = DocCommandModule;","map":null,"metadata":{},"sourceType":"script"}