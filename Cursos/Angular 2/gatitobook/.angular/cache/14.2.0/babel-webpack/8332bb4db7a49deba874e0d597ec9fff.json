{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/Voluti/Desktop/Git/Cursos/Angular 2/gatitobook/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nconst getOptions = require('./common/get-options.js');\n\nconst owner = require('./common/owner.js');\n\nconst withOwner = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (path, fn, opts) {\n    const options = getOptions(opts, {\n      copy: ['owner']\n    });\n    const {\n      uid,\n      gid\n    } = yield owner.validate(path, options.owner);\n    const result = yield fn({\n      uid,\n      gid\n    });\n    yield Promise.all([owner.update(path, uid, gid), typeof result === 'string' ? owner.update(result, uid, gid) : null]);\n    return result;\n  });\n\n  return function withOwner(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = withOwner;","map":null,"metadata":{},"sourceType":"script"}