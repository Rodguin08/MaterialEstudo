{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UnsupportedPlatformException = exports.UnimplementedException = exports.MergeConflictException = exports.InvalidUpdateRecordException = exports.ContentHasMutatedException = exports.PathIsFileException = exports.PathIsDirectoryException = exports.FileAlreadyExistException = exports.FileDoesNotExistException = exports.UnknownException = exports.BaseException = void 0;\n\nclass BaseException extends Error {\n  constructor(message = '') {\n    super(message);\n  }\n\n}\n\nexports.BaseException = BaseException;\n\nclass UnknownException extends BaseException {\n  constructor(message) {\n    super(message);\n  }\n\n}\n\nexports.UnknownException = UnknownException; // Exceptions\n\nclass FileDoesNotExistException extends BaseException {\n  constructor(path) {\n    super(`Path \"${path}\" does not exist.`);\n  }\n\n}\n\nexports.FileDoesNotExistException = FileDoesNotExistException;\n\nclass FileAlreadyExistException extends BaseException {\n  constructor(path) {\n    super(`Path \"${path}\" already exist.`);\n  }\n\n}\n\nexports.FileAlreadyExistException = FileAlreadyExistException;\n\nclass PathIsDirectoryException extends BaseException {\n  constructor(path) {\n    super(`Path \"${path}\" is a directory.`);\n  }\n\n}\n\nexports.PathIsDirectoryException = PathIsDirectoryException;\n\nclass PathIsFileException extends BaseException {\n  constructor(path) {\n    super(`Path \"${path}\" is a file.`);\n  }\n\n}\n\nexports.PathIsFileException = PathIsFileException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\n\nclass ContentHasMutatedException extends BaseException {\n  constructor(path) {\n    super(`Content at path \"${path}\" has changed between the start and the end of an update.`);\n  }\n\n}\n\nexports.ContentHasMutatedException = ContentHasMutatedException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\n\nclass InvalidUpdateRecordException extends BaseException {\n  constructor() {\n    super(`Invalid record instance.`);\n  }\n\n}\n\nexports.InvalidUpdateRecordException = InvalidUpdateRecordException;\n/**\n * @deprecated since version 14. Use the same symbol from `@angular-devkit/schematics`.\n */\n\nclass MergeConflictException extends BaseException {\n  constructor(path) {\n    super(`A merge conflicted on path \"${path}\".`);\n  }\n\n}\n\nexports.MergeConflictException = MergeConflictException;\n/**\n * @deprecated since version 14. Create a custom exception implementation instead.\n */\n\nclass UnimplementedException extends BaseException {\n  constructor() {\n    super('This function is unimplemented.');\n  }\n\n}\n\nexports.UnimplementedException = UnimplementedException;\n/**\n * @deprecated since version 14. Create a custom exception implementation instead.\n */\n\nclass UnsupportedPlatformException extends BaseException {\n  constructor() {\n    super('This platform is not supported by this code path.');\n  }\n\n}\n\nexports.UnsupportedPlatformException = UnsupportedPlatformException;","map":null,"metadata":{},"sourceType":"script"}