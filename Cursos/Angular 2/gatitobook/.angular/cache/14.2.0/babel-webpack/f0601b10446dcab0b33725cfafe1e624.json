{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.trimNewlines = exports.stripIndents = exports.stripIndent = exports.indentBy = exports.oneLine = void 0; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction oneLine(strings, ...values) {\n  const endResult = String.raw(strings, ...values);\n  return endResult.replace(/(?:\\r?\\n(?:\\s*))+/gm, ' ').trim();\n}\n\nexports.oneLine = oneLine;\n\nfunction indentBy(indentations) {\n  let i = '';\n\n  while (indentations--) {\n    i += ' ';\n  }\n\n  return (strings, ...values) => {\n    return i + stripIndent(strings, ...values).replace(/\\n/g, '\\n' + i);\n  };\n}\n\nexports.indentBy = indentBy; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction stripIndent(strings, ...values) {\n  const endResult = String.raw(strings, ...values); // remove the shortest leading indentation from each line\n\n  const match = endResult.match(/^[ \\t]*(?=\\S)/gm); // return early if there's nothing to strip\n\n  if (match === null) {\n    return endResult;\n  }\n\n  const indent = Math.min(...match.map(el => el.length));\n  const regexp = new RegExp('^[ \\\\t]{' + indent + '}', 'gm');\n  return (indent > 0 ? endResult.replace(regexp, '') : endResult).trim();\n}\n\nexports.stripIndent = stripIndent; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction stripIndents(strings, ...values) {\n  return String.raw(strings, ...values).split('\\n').map(line => line.trim()).join('\\n').trim();\n}\n\nexports.stripIndents = stripIndents; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\nfunction trimNewlines(strings, ...values) {\n  const endResult = String.raw(strings, ...values);\n  return endResult // Remove the newline at the start.\n  .replace(/^(?:\\r?\\n)+/, '') // Remove the newline at the end and following whitespace.\n  .replace(/(?:\\r?\\n(?:\\s*))$/, '');\n}\n\nexports.trimNewlines = trimNewlines;","map":null,"metadata":{},"sourceType":"script"}