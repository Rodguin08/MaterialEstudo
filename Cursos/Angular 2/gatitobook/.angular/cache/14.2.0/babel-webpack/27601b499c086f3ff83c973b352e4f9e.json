{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnalyticsReporter = exports.ForwardingAnalytics = exports.AnalyticsReportKind = void 0;\nvar AnalyticsReportKind;\n\n(function (AnalyticsReportKind) {\n  AnalyticsReportKind[\"Event\"] = \"event\";\n  AnalyticsReportKind[\"Screenview\"] = \"screenview\";\n  AnalyticsReportKind[\"Pageview\"] = \"pageview\";\n  AnalyticsReportKind[\"Timing\"] = \"timing\";\n})(AnalyticsReportKind = exports.AnalyticsReportKind || (exports.AnalyticsReportKind = {}));\n/**\n * A class that follows the Analytics interface and forwards analytic reports (JavaScript objects).\n * AnalyticsReporter is the counterpart which takes analytic reports and report them to another\n * Analytics interface.\n */\n\n\nclass ForwardingAnalytics {\n  constructor(_fn) {\n    this._fn = _fn;\n  }\n\n  event(category, action, options) {\n    this._fn({\n      kind: AnalyticsReportKind.Event,\n      category,\n      action,\n      options: { ...options\n      }\n    });\n  }\n\n  screenview(screenName, appName, options) {\n    this._fn({\n      kind: AnalyticsReportKind.Screenview,\n      screenName,\n      appName,\n      options: { ...options\n      }\n    });\n  }\n\n  pageview(path, options) {\n    this._fn({\n      kind: AnalyticsReportKind.Pageview,\n      path,\n      options: { ...options\n      }\n    });\n  }\n\n  timing(category, variable, time, options) {\n    this._fn({\n      kind: AnalyticsReportKind.Timing,\n      category,\n      variable,\n      time,\n      options: { ...options\n      }\n    });\n  } // We do not support flushing.\n\n\n  flush() {\n    return Promise.resolve();\n  }\n\n}\n\nexports.ForwardingAnalytics = ForwardingAnalytics;\n\nclass AnalyticsReporter {\n  constructor(_analytics) {\n    this._analytics = _analytics;\n  }\n\n  report(report) {\n    switch (report.kind) {\n      case AnalyticsReportKind.Event:\n        this._analytics.event(report.category, report.action, report.options);\n\n        break;\n\n      case AnalyticsReportKind.Screenview:\n        this._analytics.screenview(report.screenName, report.appName, report.options);\n\n        break;\n\n      case AnalyticsReportKind.Pageview:\n        this._analytics.pageview(report.path, report.options);\n\n        break;\n\n      case AnalyticsReportKind.Timing:\n        this._analytics.timing(report.category, report.variable, report.time, report.options);\n\n        break;\n\n      default:\n        throw new Error('Unexpected analytics report: ' + JSON.stringify(report));\n    }\n  }\n\n}\n\nexports.AnalyticsReporter = AnalyticsReporter;","map":null,"metadata":{},"sourceType":"script"}