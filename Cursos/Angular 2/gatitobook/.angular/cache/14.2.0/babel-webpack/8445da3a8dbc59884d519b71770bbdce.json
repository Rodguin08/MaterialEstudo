{"ast":null,"code":"var _asyncToGenerator = require(\"C:/Users/Voluti/Desktop/Git/Cursos/Angular 2/gatitobook/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\n\nconst {\n  dirname,\n  sep\n} = require('path');\n\nconst fs = require('./fs.js');\n\nconst getOptions = require('./common/get-options.js');\n\nconst withOwner = require('./with-owner.js');\n\nconst mkdtemp = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (prefix, opts) {\n    const options = getOptions(opts, {\n      copy: ['encoding'],\n      wrap: 'encoding'\n    }); // mkdtemp relies on the trailing path separator to indicate if it should\n    // create a directory inside of the prefix. if that's the case then the root\n    // we infer ownership from is the prefix itself, otherwise it's the dirname\n    // /tmp -> /tmpABCDEF, infers from /\n    // /tmp/ -> /tmp/ABCDEF, infers from /tmp\n\n    const root = prefix.endsWith(sep) ? prefix : dirname(prefix);\n    return withOwner(root, () => fs.mkdtemp(prefix, options), opts);\n  });\n\n  return function mkdtemp(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports = mkdtemp;","map":null,"metadata":{},"sourceType":"script"}