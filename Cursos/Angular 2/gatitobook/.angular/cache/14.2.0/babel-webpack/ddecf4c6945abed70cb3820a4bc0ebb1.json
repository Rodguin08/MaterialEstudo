{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeModuleJobRegistry = void 0;\n\nconst rxjs_1 = require(\"rxjs\");\n\nconst src_1 = require(\"../../../src\");\n\nclass NodeModuleJobRegistry {\n  _resolve(name) {\n    try {\n      return require.resolve(name);\n    } catch (e) {\n      if (e.code === 'MODULE_NOT_FOUND') {\n        return null;\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Get a job description for a named job.\n   *\n   * @param name The name of the job.\n   * @returns A description, or null if the job is not registered.\n   */\n\n\n  get(name) {\n    const [moduleName, exportName] = name.split(/#/, 2);\n\n    const resolvedPath = this._resolve(moduleName);\n\n    if (!resolvedPath) {\n      return (0, rxjs_1.of)(null);\n    }\n\n    const pkg = require(resolvedPath);\n\n    const handler = pkg[exportName || 'default'];\n\n    if (!handler) {\n      return (0, rxjs_1.of)(null);\n    }\n\n    function _getValue(...fields) {\n      return fields.find(x => src_1.schema.isJsonSchema(x)) || true;\n    }\n\n    const argument = _getValue(pkg.argument, handler.argument);\n\n    const input = _getValue(pkg.input, handler.input);\n\n    const output = _getValue(pkg.output, handler.output);\n\n    const channels = _getValue(pkg.channels, handler.channels);\n\n    return (0, rxjs_1.of)(Object.assign(handler.bind(undefined), {\n      jobDescription: {\n        argument,\n        input,\n        output,\n        channels\n      }\n    }));\n  }\n\n}\n\nexports.NodeModuleJobRegistry = NodeModuleJobRegistry;","map":null,"metadata":{},"sourceType":"script"}