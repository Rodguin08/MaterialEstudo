{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkedList = void 0;\n\nclass LinkedList {\n  constructor(_head) {\n    this._head = _head;\n  }\n\n  get(l) {\n    let c = this._head;\n\n    while (c && l > 0) {\n      l--;\n      c = c.next;\n    }\n\n    return c;\n  }\n\n  get head() {\n    return this._head;\n  }\n\n  get length() {\n    let c = this._head;\n    let i = 0;\n\n    while (c) {\n      i++;\n      c = c.next;\n    }\n\n    return i;\n  }\n\n  reduce(accumulator, seed) {\n    let c = this._head;\n    let acc = seed;\n    let i = 0;\n\n    while (c) {\n      acc = accumulator(acc, c, i);\n      i++;\n      c = c.next;\n    }\n\n    return acc;\n  }\n\n  find(predicate) {\n    let c = this._head;\n    let i = 0;\n\n    while (c) {\n      if (predicate(c, i)) {\n        break;\n      }\n\n      i++;\n      c = c.next;\n    }\n\n    return c;\n  }\n\n  forEach(visitor) {\n    let c = this._head;\n    let i = 0;\n\n    while (c) {\n      visitor(c, i);\n      i++;\n      c = c.next;\n    }\n  }\n\n}\n\nexports.LinkedList = LinkedList;","map":null,"metadata":{},"sourceType":"script"}