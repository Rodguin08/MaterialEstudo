{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/*#__PURE__*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addCommandModuleToYargs = exports.demandCommandFailureMessage = void 0;\n\nconst command_module_1 = /*#__PURE__*/require(\"../command-module\");\n\nexports.demandCommandFailureMessage = `You need to specify a command before moving on. Use '--help' to view the available commands.`;\n\nfunction addCommandModuleToYargs(localYargs, commandModule, context) {\n  const cmd = new commandModule(context);\n  const {\n    args: {\n      options: {\n        jsonHelp\n      }\n    },\n    workspace\n  } = context;\n  const describe = jsonHelp ? cmd.fullDescribe : cmd.describe;\n  return localYargs.command({\n    command: cmd.command,\n    aliases: cmd.aliases,\n    describe: // We cannot add custom fields in help, such as long command description which is used in AIO.\n    // Therefore, we get around this by adding a complex object as a string which we later parse when generating the help files.\n    typeof describe === 'object' ? JSON.stringify(describe) : describe,\n    deprecated: cmd.deprecated,\n    builder: argv => {\n      // Skip scope validation when running with '--json-help' since it's easier to generate the output for all commands this way.\n      const isInvalidScope = !jsonHelp && (cmd.scope === command_module_1.CommandScope.In && !workspace || cmd.scope === command_module_1.CommandScope.Out && workspace);\n\n      if (isInvalidScope) {\n        throw new command_module_1.CommandModuleError(`This command is not available when running the Angular CLI ${workspace ? 'inside' : 'outside'} a workspace.`);\n      }\n\n      return cmd.builder(argv);\n    },\n    handler: args => cmd.handler(args)\n  });\n}\n\nexports.addCommandModuleToYargs = addCommandModuleToYargs;","map":null,"metadata":{},"sourceType":"script"}