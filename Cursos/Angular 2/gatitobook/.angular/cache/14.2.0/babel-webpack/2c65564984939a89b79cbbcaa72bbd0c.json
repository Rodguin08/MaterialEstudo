{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NodeModulesTestEngineHost = void 0;\n\nconst node_module_engine_host_1 = require(\"./node-module-engine-host\");\n/**\n * An EngineHost that uses a registry to super seed locations of collection.json files, but\n * revert back to using node modules resolution. This is done for testing.\n */\n\n\nclass NodeModulesTestEngineHost extends node_module_engine_host_1.NodeModulesEngineHost {\n  constructor() {\n    super(...arguments);\n    this._collections = new Map();\n    this._tasks = [];\n  }\n\n  get tasks() {\n    return this._tasks;\n  }\n\n  clearTasks() {\n    this._tasks = [];\n  }\n\n  registerCollection(name, path) {\n    this._collections.set(name, path);\n  }\n\n  transformContext(context) {\n    const oldAddTask = context.addTask;\n\n    context.addTask = (task, dependencies) => {\n      this._tasks.push(task.toConfiguration());\n\n      return oldAddTask.call(context, task, dependencies);\n    };\n\n    return context;\n  }\n\n  _resolveCollectionPath(name, requester) {\n    const maybePath = this._collections.get(name);\n\n    if (maybePath) {\n      return maybePath;\n    }\n\n    return super._resolveCollectionPath(name, requester);\n  }\n\n}\n\nexports.NodeModulesTestEngineHost = NodeModulesTestEngineHost;","map":null,"metadata":{},"sourceType":"script"}