{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/*#__PURE__*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CacheCommandModule = void 0;\n\nconst path_1 = /*#__PURE__*/require(\"path\");\n\nconst command_module_1 = /*#__PURE__*/require(\"../../command-builder/command-module\");\n\nconst command_1 = /*#__PURE__*/require(\"../../command-builder/utilities/command\");\n\nconst cli_1 = /*#__PURE__*/require(\"./clean/cli\");\n\nconst cli_2 = /*#__PURE__*/require(\"./info/cli\");\n\nconst cli_3 = /*#__PURE__*/require(\"./settings/cli\");\n\nclass CacheCommandModule extends command_module_1.CommandModule {\n  constructor() {\n    super(...arguments);\n    this.command = 'cache';\n    this.describe = 'Configure persistent disk cache and retrieve cache statistics.';\n    this.longDescriptionPath = (0, path_1.join)(__dirname, 'long-description.md');\n    this.scope = command_module_1.CommandScope.In;\n  }\n\n  builder(localYargs) {\n    const subcommands = [cli_3.CacheEnableModule, cli_3.CacheDisableModule, cli_1.CacheCleanModule, cli_2.CacheInfoCommandModule].sort();\n\n    for (const module of subcommands) {\n      localYargs = (0, command_1.addCommandModuleToYargs)(localYargs, module, this.context);\n    }\n\n    return localYargs.demandCommand(1, command_1.demandCommandFailureMessage).strict();\n  }\n\n  run(_options) {}\n\n}\n\nexports.CacheCommandModule = CacheCommandModule;","map":null,"metadata":{},"sourceType":"script"}