{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DelegateTree = void 0;\n\nconst interface_1 = require(\"./interface\");\n\nclass DelegateTree {\n  constructor(_other) {\n    this._other = _other;\n  }\n\n  branch() {\n    return this._other.branch();\n  }\n\n  merge(other, strategy) {\n    this._other.merge(other, strategy);\n  }\n\n  get root() {\n    return this._other.root;\n  } // Readonly.\n\n\n  read(path) {\n    return this._other.read(path);\n  }\n\n  readText(path) {\n    return this._other.readText(path);\n  }\n\n  readJson(path) {\n    return this._other.readJson(path);\n  }\n\n  exists(path) {\n    return this._other.exists(path);\n  }\n\n  get(path) {\n    return this._other.get(path);\n  }\n\n  getDir(path) {\n    return this._other.getDir(path);\n  }\n\n  visit(visitor) {\n    return this._other.visit(visitor);\n  } // Change content of host files.\n\n\n  overwrite(path, content) {\n    return this._other.overwrite(path, content);\n  }\n\n  beginUpdate(path) {\n    return this._other.beginUpdate(path);\n  }\n\n  commitUpdate(record) {\n    return this._other.commitUpdate(record);\n  } // Structural methods.\n\n\n  create(path, content) {\n    return this._other.create(path, content);\n  }\n\n  delete(path) {\n    return this._other.delete(path);\n  }\n\n  rename(from, to) {\n    return this._other.rename(from, to);\n  }\n\n  apply(action, strategy) {\n    return this._other.apply(action, strategy);\n  }\n\n  get actions() {\n    return this._other.actions;\n  }\n\n  [interface_1.TreeSymbol]() {\n    return this;\n  }\n\n}\n\nexports.DelegateTree = DelegateTree;","map":null,"metadata":{},"sourceType":"script"}