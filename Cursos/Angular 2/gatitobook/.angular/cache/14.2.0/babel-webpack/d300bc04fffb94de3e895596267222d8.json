{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\n/*#__PURE__*/\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Spinner = void 0;\n\nconst ora_1 = __importDefault( /*#__PURE__*/require(\"ora\"));\n\nconst color_1 = /*#__PURE__*/require(\"./color\");\n\nclass Spinner {\n  constructor(text) {\n    /** When false, only fail messages will be displayed. */\n    this.enabled = true;\n    this.spinner = (0, ora_1.default)({\n      text,\n      // The below 2 options are needed because otherwise CTRL+C will be delayed\n      // when the underlying process is sync.\n      hideCursor: false,\n      discardStdin: false\n    });\n  }\n\n  set text(text) {\n    this.spinner.text = text;\n  }\n\n  succeed(text) {\n    if (this.enabled) {\n      this.spinner.succeed(text);\n    }\n  }\n\n  info(text) {\n    this.spinner.info(text);\n  }\n\n  fail(text) {\n    this.spinner.fail(text && color_1.colors.redBright(text));\n  }\n\n  warn(text) {\n    this.spinner.warn(text && color_1.colors.yellowBright(text));\n  }\n\n  stop() {\n    this.spinner.stop();\n  }\n\n  start(text) {\n    if (this.enabled) {\n      this.spinner.start(text);\n    }\n  }\n\n}\n\nexports.Spinner = Spinner;","map":null,"metadata":{},"sourceType":"script"}