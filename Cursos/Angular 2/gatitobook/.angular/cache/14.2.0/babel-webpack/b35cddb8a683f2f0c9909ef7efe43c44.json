{"ast":null,"code":"const fs = require('fs');\n\nconst promisify = require('@gar/promisify');\n\nconst isLower = s => s === s.toLowerCase() && s !== s.toUpperCase();\n\nconst fsSync = Object.fromEntries(Object.entries(fs).filter(([k, v]) => typeof v === 'function' && (k.endsWith('Sync') || !isLower(k[0])))); // this module returns the core fs async fns wrapped in a proxy that promisifies\n// method calls within the getter. we keep it in a separate module so that the\n// overridden methods have a consistent way to get to promisified fs methods\n// without creating a circular dependency. the ctors and sync methods are kept untouched\n\nmodule.exports = { ...promisify(fs),\n  ...fsSync\n};","map":null,"metadata":{},"sourceType":"script"}