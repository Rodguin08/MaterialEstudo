{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __exportStar = this && this.__exportStar || function (m, exports) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NgCliAnalyticsMetricsFlagInfo = exports.NgCliAnalyticsDimensionsFlagInfo = exports.NgCliAnalyticsMetrics = exports.NgCliAnalyticsDimensions = void 0;\n\n__exportStar(require(\"./api\"), exports);\n\n__exportStar(require(\"./forwarder\"), exports);\n\n__exportStar(require(\"./logging\"), exports);\n\n__exportStar(require(\"./multi\"), exports);\n\n__exportStar(require(\"./noop\"), exports);\n/**\n * MAKE SURE TO KEEP THIS IN SYNC WITH THE TABLE AND CONTENT IN `/docs/design/analytics.md`.\n * WE LIST THOSE DIMENSIONS (AND MORE).\n *\n * These cannot be in their respective schema.json file because we either change the type\n * (e.g. --buildEventLog is string, but we want to know the usage of it, not its value), or\n * some validation needs to be done (we cannot record ng add --collection if it's not marked as\n * allowed).\n */\n\n\nvar NgCliAnalyticsDimensions;\n\n(function (NgCliAnalyticsDimensions) {\n  NgCliAnalyticsDimensions[NgCliAnalyticsDimensions[\"CpuCount\"] = 1] = \"CpuCount\";\n  NgCliAnalyticsDimensions[NgCliAnalyticsDimensions[\"CpuSpeed\"] = 2] = \"CpuSpeed\";\n  NgCliAnalyticsDimensions[NgCliAnalyticsDimensions[\"RamInGigabytes\"] = 3] = \"RamInGigabytes\";\n  NgCliAnalyticsDimensions[NgCliAnalyticsDimensions[\"NodeVersion\"] = 4] = \"NodeVersion\";\n  NgCliAnalyticsDimensions[NgCliAnalyticsDimensions[\"NgAddCollection\"] = 6] = \"NgAddCollection\";\n  NgCliAnalyticsDimensions[NgCliAnalyticsDimensions[\"AngularCLIMajorVersion\"] = 8] = \"AngularCLIMajorVersion\";\n  NgCliAnalyticsDimensions[NgCliAnalyticsDimensions[\"BuildErrors\"] = 20] = \"BuildErrors\";\n})(NgCliAnalyticsDimensions = exports.NgCliAnalyticsDimensions || (exports.NgCliAnalyticsDimensions = {}));\n\nvar NgCliAnalyticsMetrics;\n\n(function (NgCliAnalyticsMetrics) {\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"NgComponentCount\"] = 1] = \"NgComponentCount\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"UNUSED_2\"] = 2] = \"UNUSED_2\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"UNUSED_3\"] = 3] = \"UNUSED_3\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"UNUSED_4\"] = 4] = \"UNUSED_4\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"BuildTime\"] = 5] = \"BuildTime\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"NgOnInitCount\"] = 6] = \"NgOnInitCount\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"InitialChunkSize\"] = 7] = \"InitialChunkSize\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"TotalChunkCount\"] = 8] = \"TotalChunkCount\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"TotalChunkSize\"] = 9] = \"TotalChunkSize\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"LazyChunkCount\"] = 10] = \"LazyChunkCount\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"LazyChunkSize\"] = 11] = \"LazyChunkSize\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"AssetCount\"] = 12] = \"AssetCount\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"AssetSize\"] = 13] = \"AssetSize\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"PolyfillSize\"] = 14] = \"PolyfillSize\";\n  NgCliAnalyticsMetrics[NgCliAnalyticsMetrics[\"CssSize\"] = 15] = \"CssSize\";\n})(NgCliAnalyticsMetrics = exports.NgCliAnalyticsMetrics || (exports.NgCliAnalyticsMetrics = {})); // This table is used when generating the analytics.md file. It should match the enum above\n// or the validate-user-analytics script will fail.\n\n\nexports.NgCliAnalyticsDimensionsFlagInfo = {\n  CpuCount: ['CPU Count', 'number'],\n  CpuSpeed: ['CPU Speed', 'number'],\n  RamInGigabytes: ['RAM (In GB)', 'number'],\n  NodeVersion: ['Node Version', 'number'],\n  NgAddCollection: ['--collection', 'string'],\n  AngularCLIMajorVersion: ['Angular CLI Major Version', 'string'],\n  BuildErrors: ['Build Errors (comma separated)', 'string']\n}; // This table is used when generating the analytics.md file. It should match the enum above\n// or the validate-user-analytics script will fail.\n\nexports.NgCliAnalyticsMetricsFlagInfo = {\n  NgComponentCount: ['NgComponentCount', 'number'],\n  UNUSED_2: ['UNUSED_2', 'none'],\n  UNUSED_3: ['UNUSED_3', 'none'],\n  UNUSED_4: ['UNUSED_4', 'none'],\n  BuildTime: ['Build Time', 'number'],\n  NgOnInitCount: ['NgOnInit Count', 'number'],\n  InitialChunkSize: ['Initial Chunk Size', 'number'],\n  TotalChunkCount: ['Total Chunk Count', 'number'],\n  TotalChunkSize: ['Total Chunk Size', 'number'],\n  LazyChunkCount: ['Lazy Chunk Count', 'number'],\n  LazyChunkSize: ['Lazy Chunk Size', 'number'],\n  AssetCount: ['Asset Count', 'number'],\n  AssetSize: ['Asset Size', 'number'],\n  PolyfillSize: [' Polyfill Size', 'number'],\n  CssSize: [' Css Size', 'number']\n};","map":null,"metadata":{},"sourceType":"script"}