{"ast":null,"code":"'use strict'; // eslint-disable-next-line max-len\n// this code adapted from: https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/\n\nconst cmd = (input, doubleEscape) => {\n  if (!input.length) {\n    return '\"\"';\n  }\n\n  let result;\n\n  if (!/[ \\t\\n\\v\"]/.test(input)) {\n    result = input;\n  } else {\n    result = '\"';\n\n    for (let i = 0; i <= input.length; ++i) {\n      let slashCount = 0;\n\n      while (input[i] === '\\\\') {\n        ++i;\n        ++slashCount;\n      }\n\n      if (i === input.length) {\n        result += '\\\\'.repeat(slashCount * 2);\n        break;\n      }\n\n      if (input[i] === '\"') {\n        result += '\\\\'.repeat(slashCount * 2 + 1);\n        result += input[i];\n      } else {\n        result += '\\\\'.repeat(slashCount);\n        result += input[i];\n      }\n    }\n\n    result += '\"';\n  } // and finally, prefix shell meta chars with a ^\n\n\n  result = result.replace(/[ !%^&()<>|\"]/g, '^$&');\n\n  if (doubleEscape) {\n    result = result.replace(/[ !%^&()<>|\"]/g, '^$&');\n  }\n\n  return result;\n};\n\nconst sh = input => {\n  if (!input.length) {\n    return `''`;\n  }\n\n  if (!/[\\t\\n\\r \"#$&'()*;<>?\\\\`|~]/.test(input)) {\n    return input;\n  } // replace single quotes with '\\'' and wrap the whole result in a fresh set of quotes\n\n\n  const result = `'${input.replace(/'/g, `'\\\\''`)}'` // if the input string already had single quotes around it, clean those up\n  .replace(/^(?:'')+(?!$)/, '').replace(/\\\\'''/g, `\\\\'`);\n  return result;\n};\n\nmodule.exports = {\n  cmd,\n  sh\n};","map":null,"metadata":{},"sourceType":"script"}